/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package rupay;

import java.util.Date;
import javax.swing.JOptionPane;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;


/**
 *
 * @author rolen
 */
public class signup extends javax.swing.JFrame {
    String fname, uname, pwd, cpwd,cont_no;
    Date dob;
    int id=0;
     
    /**
     * Creates new form signup
     */
    
    public signup() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_fname = new javax.swing.JTextField();
        txt_uname = new javax.swing.JTextField();
        txt_pwd = new javax.swing.JPasswordField();
        txt_cpwd = new javax.swing.JPasswordField();
        txt_dob = new com.toedter.calendar.JDateChooser();
        txt_cont_no = new javax.swing.JTextField();
        lbl_pwd_err = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        lbl_cont_err = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txt_fname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_fnameActionPerformed(evt);
            }
        });

        txt_uname.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                txt_unameAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        txt_pwd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_pwdKeyPressed(evt);
            }
        });

        txt_cont_no.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_cont_noKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_cont_noKeyReleased(evt);
            }
        });

        lbl_pwd_err.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        lbl_pwd_err.setForeground(new java.awt.Color(255, 0, 0));

        jButton1.setText("Signup");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lbl_cont_err.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        lbl_cont_err.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_dob, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_cont_no))
                        .addGap(40, 40, 40))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_fname, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txt_cpwd, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txt_pwd, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txt_uname, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(jButton1)))
                        .addGap(35, 35, 35)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_pwd_err, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_cont_err, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(txt_fname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_uname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_pwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_pwd_err))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_cpwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_dob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_cont_no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_cont_err))
                .addGap(55, 55, 55)
                .addComponent(jButton1)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_fnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_fnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_fnameActionPerformed

    private void txt_unameAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_txt_unameAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_unameAncestorAdded

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(validation()){
            insertDataToDatabase();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_cont_noKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cont_noKeyPressed
        checkContactNo();
    }//GEN-LAST:event_txt_cont_noKeyPressed

    private void txt_pwdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_pwdKeyPressed
        checkPassword();
    }//GEN-LAST:event_txt_pwdKeyPressed

    private void txt_cont_noKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cont_noKeyReleased
        checkContactNo();
    }//GEN-LAST:event_txt_cont_noKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new signup().setVisible(true);
            }
        });
    }
    
    boolean validation()
        {
            
            fname=txt_fname.getText();
            uname=txt_uname.getText();            
            dob=txt_dob.getDate();
            cont_no=txt_cont_no.getText();

            
            char[] pwdChars = txt_pwd.getPassword();
            pwd = new String(pwdChars);
            
            char[] cpwdChars = txt_cpwd.getPassword();
            cpwd = new String(cpwdChars);
            
            
            
            
            if (fname.equals(""))
            {
                JOptionPane.showMessageDialog(this,"please enter full name");
                return false;
            }
            if (uname.equals(""))
            {
                JOptionPane.showMessageDialog(this,"please enter your username");
                return false;
            }
                if (pwd.equals(""))
            {
                JOptionPane.showMessageDialog(this,"please enter password");
                return false;
            }
                if (cpwd.equals(""))
            {
                JOptionPane.showMessageDialog(this,"please confirm the password");
                return false;
            }
                if (dob == null)
            {
                JOptionPane.showMessageDialog(this,"please enter date of birth");
                return false;
            }
                if (cont_no.equals(""))
            {
                JOptionPane.showMessageDialog(this,"please enter contact no");
                return false;
            }
                if (pwd.length()<8)
                {
                    lbl_pwd_err.setText("password should be 8 digit");
                }
                if (!pwd.equals(cpwd))
                {
                    JOptionPane.showMessageDialog(this ,"password not matched");
                    return false;
                }
                return true;
                
        }
    
       public void checkPassword()
    {
        pwd=txt_pwd.getText();
        if(pwd .length()<7){
            lbl_pwd_err.setText("password should be 8 digits");
        }
        else
        {
           lbl_pwd_err.setText("") ;
        }
    }
    public void checkContactNo()
    {
    cont_no=txt_cont_no.getText();
    if(cont_no.length()==10)
    {
        lbl_cont_err.setText("");
    }
        else
        {
            lbl_cont_err.setText("Contact no should be of 10 digit");       
        }
    }
    
    public Connection getConnection() {
    Connection connection = null;
    try {
        
        String url = "jdbc:sqlite:rupaydb.db";
        connection = DriverManager.getConnection(url);
    } catch (SQLException e) {
        System.out.println("Error connecting to the database: " + e.getMessage());
    }
    return connection;
}

    void clearFields() {
    txt_fname.setText("");
    txt_uname.setText("");
    txt_pwd.setText("");
    txt_cpwd.setText("");
    txt_dob.setDate(null);
    txt_cont_no.setText("");
}
    
    // Function to get the last ID from the database and increment it by 1
int getNextIdFromDatabase() {
    int nextId = 0;
    try (Connection connection = getConnection()) {
        String query = "SELECT MAX(id) FROM signup";
        PreparedStatement statement = connection.prepareStatement(query);
        ResultSet resultSet = statement.executeQuery();

        if (resultSet.next()) {
            int lastId = resultSet.getInt(1);
            nextId = lastId + 1;
        }
    } catch (SQLException e) {
        System.out.println("Error retrieving next ID: " + e.getMessage());
    }
    return nextId;
}

// Function to insert the data into the database
void insertDataToDatabase() {
    id = getNextIdFromDatabase();

    try (Connection connection = getConnection()) {
        String query = "INSERT INTO signup (id, fname, uname, pwd, dob, cont_no) VALUES (?, ?, ?, ?, ?, ?)";
        PreparedStatement statement = connection.prepareStatement(query);
        statement.setInt(1, id);
        statement.setString(2, fname);
        statement.setString(3, uname);
        statement.setString(4, pwd);
        statement.setDate(5, new java.sql.Date(dob.getTime()));
        statement.setString(6, cont_no);

        int affectedRows = statement.executeUpdate();

        if (affectedRows > 0) {
            // Show a success message
            JOptionPane.showMessageDialog(this, "Record inserted successfully");

            // Clear the input fields
            clearFields();
        }
    } catch (SQLException e) {
        System.out.println("Error inserting data: " + e.getMessage());
    }
}


    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel lbl_cont_err;
    private javax.swing.JLabel lbl_pwd_err;
    private javax.swing.JTextField txt_cont_no;
    private javax.swing.JPasswordField txt_cpwd;
    private com.toedter.calendar.JDateChooser txt_dob;
    private javax.swing.JTextField txt_fname;
    private javax.swing.JPasswordField txt_pwd;
    private javax.swing.JTextField txt_uname;
    // End of variables declaration//GEN-END:variables
}
